@startuml

+enum Align{
    Center
    Left
    Right
    NotAligned
}

class App{
    -dateTime:LocalDateTime
    +run()
    -updateDateTime(line:Int)
    -writeDate(line:Int, alignment: TUI.Align)
    -writeHour(line:Int, alignment:TUI.Align)
    -readEntry():Users.User?
    -changePin():Int?
    -manageEntry(user: Users.User):Users.User
    +userUpdateEntryTime(user:Users.User):User.User
    +writeEntryAndExitTimeWithAccumulate(accumulate: Long, exit: Long?, entry: Long)
    +manageDoor(userName: String)
    -initializeObjects()
    -msToTimeFormat(time: Long):String
}

class TUI{
    +writeSentence(text:String, line:Int, alignment:Align)

}

class LCD{
    +LINES:Int
    +COLS:Int
    -writeNibble(rs:Boolean, data:Int)
    -writeByte(rs:Boolean, data:Int)
    -writeCMD(data:Int)
    -writeData(data:Int)
    +init()
    +write(c:Char)
    +write(text:String)
    +cursor(line:Int, column:Int)
    +clear()
}

class KBD{
    -NONE:Char
    -SERIAL:Boolean
    -array:Char[]
    -getKeyParallel():Char
    -getKeySerial():Char
    +waitKey(timeout:Long):Char
}

class HAL{
    -outputBits
    -usbPortIn():Int
    -writeValueInOutput(value:Int)
    +init()
    +isBit(mask:Int):Boolean
    +readBits(mask:Int):Int
    +writeBits(mask:Int, value:Int)
    +setBits(mask:Int)
    +clearBits(mask:Int)
}

class Door{
    +init()
    -sendCommand(speed:Int, openNClose:Boolean)
    +open(speed:Int)
    +close(speed:Int
    -isFinished():Boolean
}

+class Log{
    -toText()
}

class Logs{
    +addLog()
    +writeLogs(users:List<String>))
}
class Users{
    -usersMap:HashMap<Int, User>
    +User.toText():String
    +add(name:String,PIN: Int): User?
    +update(user: User): Boolean
    +remove(user: User): User?
    -load(userText: String)
    +loadUsers(users:List<String>))
    +get(uin: Int):User?
    +writeUsers(users:List<String>))

}

+class User{
    +uid
    +pin
    +name
    +entryTime
    +accumulatedTime
    +toFileString()
}

class M{
    +add()
    +remove()
    +checkMaintenance()
    +enterMaintenance()
}

class SerialReceiver{
    +init()
    -sendTXClkPulse()
    -handleError():Int
    +rcv():Int
}

KBD -> HAL:<<use>>
LCD --> HAL:<<use>>
TUI +- Align
FileAcess <-- Users:file
FileAcess --> Users:usersInfo:String[]
FileAcess <-- Logs:file
Users *-- User:usersMap "*"
Users +-- User:"       "
App <-- TUI:<<use>>
App --> Users:<<use>>
App --> User:"<<use>>"
App --> Logs:<<use>>
App -> Door:<<use>>
KBD -> SerialReceiver:<<use>>
SerialReceiver -> HAL:<<use>>
TUI --> LCD:<<use>>
TUI -> KBD:<<use>>
HAL <- Door:<<use>>
Logs +-- Log
M <- App:<<use>>
HAL -> M:<<use>>

@enduml